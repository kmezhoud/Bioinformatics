[["index.html", "Tutoriel de Bioinformatique Chapter 1 Introduction à la Bioinformatique", " Tutoriel de Bioinformatique Karim Mezhoud 2022-10-28 Chapter 1 Introduction à la Bioinformatique "],["les-bases-de-données.html", "Chapter 2 Les Bases de Données", " Chapter 2 Les Bases de Données "],["cross.html", "Chapter 3 Principes de l’Alignement de Séquences", " Chapter 3 Principes de l’Alignement de Séquences "],["les-principes-de-prédiction-des-structures-3d-des-protéines.html", "Chapter 4 Les Principes de Prédiction des Structures 3D des protéines", " Chapter 4 Les Principes de Prédiction des Structures 3D des protéines "],["le-docking.html", "Chapter 5 Le Docking", " Chapter 5 Le Docking "],["analyse-des-interactions-de-protéines.html", "Chapter 6 Analyse des Interactions de protéines 6.1 Cas d’étude: Identification Graphique de sous-réseaux de gènes associés aux cancers basé sur des données protéomiques réduites", " Chapter 6 Analyse des Interactions de protéines Orale presentation Include slides second level third level 6.1 Cas d’étude: Identification Graphique de sous-réseaux de gènes associés aux cancers basé sur des données protéomiques réduites This tutorial describes the main steps used to construct an enriched network from a list of genes with their expression values. The network includes the fold change, the False discovery rate (FDR), the gene expression correlation, the most often involved biological processes, and the most likely corresponding diseases. All the main steps are illustrated by screen shots. The Tools &amp; Data section lists all the tools and data required. The “Data computing” section shows you how to compute the data. The Experimental procedure section lists briefly all the steps, and the Walk-through example section illustrates these steps. The final section lists all the software and packages that were tested during this study, but not selected for inclusion in this Note. 6.1.1 Tools &amp; Data For this tutorial you will need: Bioinformatic tools Cytoscape (Shannon et al. 2003; Cline et al. 2007) software implemented by Reactome FIs (Wu, Feng, and Stein 2010), Advanced Network merge, NetworkAnalyzer, and ClueGO (Bindea et al. 2009) Apps. Experimental Data To find out more about the file format, download the corresponding supplemental file indicated in parentheses. The list of modulated protein saved in one column in text file (only_modulated_symbol.txt). Convert the protein ID on gene symbol (HGNC or HUGO symbol) using ID Mapping service, such as: BioMart Uniprot Idconverter (Alibés et al. 2007) GAGE (Luo et al. 2009) with the eg2sym function. The protein expression values. The following example of gene expression is divided into two groups and 3 replicates. (proteinEXP.txt) Node Attributes Fold change of the protein identified (Fold_Change.NA) False discovery rate of the z score or some other statistical test (FDR.NA) Correlated protein expression by statistical analysis (Correlation_Network.sif) Cancer-protein network (Cancer_Network.sif) Edge attributes The correlation rate of Protein expression (Correlation+Cancer.EA) The gene expression profile overlap between our experiments and clinical data from the cBio Cancer Genomics Portal (Cerami et al. 2012) (Correlation+Cancer.EA) 6.1.2 Data Computing 6.1.2.1 Gene list We assume that the protein list with quantitative analysis has already been compiled . Supplemental proteinEXP.txt file gives an example of the quantitative data which will be used. Pre-process the expression data into a format suitable for network analysis, clean the data by removing obvious outlier samples or excessive numbers of missing entries, and then load the data. The gene list is selected after statistical analysis. The Fold change and False discovery rate are then computed and saved in the corresponding files: Fold_Change.NA and FDR.NA. 6.1.2.2 Multiple Correlation analysis of protein expression Two genes are said to be connected by an edge if their expression values are closely correlated (statistical significance). We used CORREP package (Zhu, Li, and Li 2007) to estimate the gene expression correlation. This program assumes that data are arranged with the variables (genes) in rows and conditions (persons) in columns . It is strongly suggested that factor names be included in the data file, as this information is used in the results output. We specified that the proteins (or genes) are the variables, and the people correspond to the different conditions. In our case we have 235 variables, 6 conditions, and one replicate. It is not possible to carry out multiple correlation analysis using only two conditions and 3 replicates (like in our experimental design). Following R codes makes it possible to compute and extract correlated gene expression levels upper that threshold. # Install CORREP package from Bioconductor if (!require(&quot;BiocManager&quot;, quietly = TRUE)) install.packages(&quot;BiocManager&quot;) BiocManager::install(&quot;CORREP&quot;) # read expression data proteinEXP &lt;- read.table(file = &quot;data/cytoscape/proteinEXP.txt&quot;, header = TRUE, row.names = 1) head(proteinEXP) ## X114 X115 X116 X117 X118 X119 ## APOB 8.8836 8.4219 8.6484 8.9165 8.9223 8.7495 ## CO4B 6.6138 6.5679 6.2675 5.9642 6.6172 6.7896 ## FINC 8.2777 7.5958 8.4576 8.5394 8.2058 8.6693 ## C3 8.9511 8.3720 8.9676 8.7350 8.4286 8.6948 ## FIBA 8.5089 8.1466 8.4419 8.5200 8.4169 8.4757 ## FIBB 7.9144 7.4734 7.8074 7.9873 7.6940 8.0420 # standardization / Scale matrix # Apply by rows (1), the function x/sd(x) proteinEXP.std &lt;- apply(X = proteinEXP, MARGIN = 1, FUN = function(x) x/sd(x)) |&gt; t() # transpose the matrix proteinEXP.std |&gt; head(4) # return the first 4 rows ## X114 X115 X116 X117 X118 X119 ## APOB 45.22405 42.87366 44.02671 45.39154 45.42106 44.54139 ## CO4B 22.02363 21.87078 20.87047 19.86049 22.03495 22.60903 ## FINC 21.76372 19.97087 22.23671 22.45178 21.57468 22.79331 ## C3 35.56489 33.26399 35.63045 34.70627 33.48887 34.54655 ## run correlation for matrix x with 1 replicate and 235 genes cor.proteinEXP.std &lt;- CORREP::cor.balance(x = proteinEXP.std, m=1, G=235) genes &lt;- rownames(proteinEXP) colnames(cor.proteinEXP.std) &lt;- genes rownames(cor.proteinEXP.std) &lt;- genes class(cor.proteinEXP.std) ## [1] &quot;matrix&quot; &quot;array&quot; dim(cor.proteinEXP.std) ## [1] 235 235 cor.proteinEXP.std[1:5, 1:5] ## APOB CO4B FINC C3 FIBA ## APOB 1.0000000 -0.1450790 0.5262003 0.2474453 0.7064784 ## CO4B -0.1450790 1.0000000 -0.1765416 -0.2414720 -0.2066355 ## FINC 0.5262003 -0.1765416 1.0000000 0.5207811 0.7540140 ## C3 0.2474453 -0.2414720 0.5207811 1.0000000 0.5815279 ## FIBA 0.7064784 -0.2066355 0.7540140 0.5815279 1.0000000 # find indexes of all correlated genes upper/equal than 0.81 and under 1 idx &lt;- which(abs(cor.proteinEXP.std) &gt;=0.811 &amp; abs(cor.proteinEXP.std) &lt; 1 ,arr.ind=TRUE) head(idx) ## row col ## CLU 23 3 ## HABP2 90 4 ## MASP1 42 5 ## C1QB 82 5 ## VWF 85 5 ## PROC 100 5 # get correlated genes with rate value cor.proteinEXP.std.filter &lt;- data.frame(gene1 = genes[idx[,1]], gene2= genes[idx[,2]], value= cor.proteinEXP.std[idx]) dim(cor.proteinEXP.std.filter) ## [1] 604 3 head(cor.proteinEXP.std.filter) ## gene1 gene2 value ## 1 CLU FINC 0.8194270 ## 2 HABP2 C3 0.8152893 ## 3 MASP1 FIBA 0.8113223 ## 4 C1QB FIBA 0.8124264 ## 5 VWF FIBA 0.8205580 ## 6 PROC FIBA 0.8186229 The format of edge attributes that will be imported by Cytoscape must has this format gene1+%28pp%29+gene2=correlation value. In our case, we need to concatenate the three columns and add +%28pp%29+ between genes and = before value. # paste columns correlated_genes &lt;- paste0(cor.proteinEXP.std.filter$gene1, &quot;+%28pp%29+&quot;, cor.proteinEXP.std.filter$gene2, &quot;=&quot;, cor.proteinEXP.std.filter$value) length(correlated_genes) ## [1] 604 head(correlated_genes) ## [1] &quot;CLU+%28pp%29+FINC=0.819427009997673&quot; ## [2] &quot;HABP2+%28pp%29+C3=0.815289326650268&quot; ## [3] &quot;MASP1+%28pp%29+FIBA=0.811322313383614&quot; ## [4] &quot;C1QB+%28pp%29+FIBA=0.812426366252153&quot; ## [5] &quot;VWF+%28pp%29+FIBA=0.820558036278007&quot; ## [6] &quot;PROC+%28pp%29+FIBA=0.818622903586112&quot; 6.1.2.3 Query cBio Portal library(visNetwork) nodes &lt;- data.frame(id = 1:10, label = paste(&quot;Node&quot;, 1:10), value = c(10,5,3,7,2,3,2.6,2,9,2), shape =&quot;circle&quot;, group= c(&quot;Gr1&quot;,&quot;Gr3&quot;), color= c(&quot;#DF0101&quot;, &quot;blue&quot;) ) edges &lt;- data.frame(from = c(1,5,3,7,2,9,10,8,3,3,6), to = c(5,3,5,1,5,1,2,3,7,4,9) ) graphe &lt;- visNetwork::visNetwork(nodes, edges, width = &quot;100%&quot;) visNetwork::visOptions(graph= graphe, manipulation = TRUE, selectedBy = &quot;group&quot;, highlightNearest = TRUE ) References "],["autres.html", "Chapter 7 Autres", " Chapter 7 Autres "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
